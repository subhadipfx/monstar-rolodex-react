{"version":3,"sources":["Components/card/card.component.jsx","Components/card-list/card-list.component.jsx","Components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","type","placeholder","for","onChange","handleChange","App","state","searchField","fetch","then","response","json","users","setState","this","filter","toLowerCase","includes","e","target","value","search","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAIaA,G,kBAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCJbC,EAAW,SAAAR,GACpB,OACI,qBAAKC,UAAU,YAAf,SACMD,EAAMS,SAASC,KAAK,SAAAN,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJnDM,G,MAAY,SAAAX,GAAK,OAC1B,uBACIC,UAAU,SACVW,KAAK,SACLC,YAAab,EAAMc,IACnBC,SAAUf,EAAMgB,iBCHHC,E,kDAEjB,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTT,SAAW,GACXU,YAAc,IAJR,E,gEAQO,IAAD,OAChBC,MAAM,8CACDC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAM,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEhB,SAAWe,S,+BAGzC,IAAD,OACL,OAAOE,KAAKR,MAAMT,SAASkB,QAAO,SAAAvB,GAAO,OACrCA,EAAQE,KAAKsB,cAAcC,SAAS,EAAKX,MAAMC,YAAYS,oB,+BAIzD,IAAD,OAEL,OACI,sBAAK3B,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CACIa,IAAI,iBACJE,aAAc,SAAAc,GAAC,OAAI,EAAKL,SAAS,CAACN,YAAcW,EAAEC,OAAOC,WAE7D,cAAC,EAAD,CAAUvB,SAAUiB,KAAKO,kB,GA/BRC,IAAMC,WCOxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1d4e755f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => (\r\n    <div className=\"card-container\">\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=200x200`} />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)\r\n\r\n","import React from \"react\";\r\nimport './card-list.styles.css'\r\n\r\nimport {Card} from \"../card/card.component\"\r\nexport const CardList = props => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            { props.monsters.map( monster => <Card key={monster.id} monster={monster} />) }\r\n        </div>\r\n    )\r\n}\r\n","import  React from \"react\";\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = props => (\r\n    <input\r\n        className='search'\r\n        type='search'\r\n        placeholder={props.for}\r\n        onChange={props.handleChange} />\r\n)\r\n","import React from \"react\";\nimport './App.css';\nimport {CardList} from \"./Components/card-list/card-list.component\";\nimport {SearchBox} from \"./Components/search-box/search-box.component\";\n\nexport default class App extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            monsters : [],\n            searchField : ''\n        };\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then( response => response.json())\n            .then( users => this.setState({ monsters : users }))\n    }\n\n    search() {\n        return this.state.monsters.filter(monster =>\n            monster.name.toLowerCase().includes(this.state.searchField.toLowerCase())\n        )\n    }\n\n    render() {\n\n        return (\n            <div className=\"App\">\n                <h1>Monsters Rolodex</h1>\n                <SearchBox\n                    for='search monster'\n                    handleChange={e => this.setState({searchField : e.target.value})}\n                />\n                <CardList monsters={this.search()} />\n            </div>\n        );\n    }\n\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}